@model MVC_Stok_Takip_Sistemi.Models.Entity.Product
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Product</h2>
<div class="container">
    @using (Html.BeginForm("Add", "Products", FormMethod.Post))
    {
        <div class="form-group">
            @Html.LabelFor(x => x.Category.CategoryName)
            @Html.DropDownListFor(x => x.CategoryID, Model.CategoryList, "Choose", new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Category.CategoryName, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Brand.Brand1)
            @Html.DropDownListFor(x => x.BrandID, Model.BrandList, "Choose", new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Brand.Brand1, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.ProductName)
            @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.ProductName, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.BarcodeNo)
            @Html.TextBoxFor(x => x.BarcodeNo, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.BarcodeNo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.PurchasePrice)
            @Html.TextBoxFor(x => x.PurchasePrice, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.PurchasePrice, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.SalePrice)
            @Html.TextBoxFor(x => x.SalePrice, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.SalePrice, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Amount)
            @Html.TextBoxFor(x => x.Amount, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Amount, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Date)
            @Html.TextBoxFor(x => x.Date, new { @class = "form-control", type = "date", @Value = Model.Date.ToString("yyyy-MM-dd") })
            @Html.ValidationMessageFor(x => x.Date, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Unit.Unit1)
            @Html.DropDownListFor(x => x.UnitID, Model.UnitList, "Choose", new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Unit.Unit1, "", new { @class = "text-danger" })

        </div>
        <div><button class="btn btn-success">Add Product</button></div>

    }
</div>
@section scripts
    {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#CategoryID").change(function () {
                var ID = $("#CategoryID").val();
                var brandlist = $("#BrandID");
                brandlist.empty();
                $.ajax({
                    url: '/Products/GetBrand',
                    type: 'POST',
                    dataType: 'json',
                    data: { id2: ID },
                    success: function (data) {
                        $.each(data, function (index, option) {
                            brandlist.append('<option value="' + option.Value + '">' + option.Text + '<option>');

                        });
                    }
                });
            });
        });
    </script>

}
@section scriptdanger
    {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

